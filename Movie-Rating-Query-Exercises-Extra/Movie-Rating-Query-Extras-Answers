Q1

SELECT DISTINCT name
FROM (Reviewer NATURAL JOIN Rating) X NATURAL JOIN Movie
WHERE title = "Gone with the Wind"

Q2

SELECT name, title, stars
FROM ((Reviewer NATURAL JOIN Rating) X NATURAL JOIN Movie)
WHERE director = name

Q3

SELECT title FROM Movie
UNION
SELECT name FROM Reviewer

Q4

SELECT DISTINCT title
FROM Movie
WHERE mID NOT IN 
(SELECT mID 
FROM (Reviewer NATURAL JOIN Rating) 
WHERE name = "Chris Jackson")

Q5

SELECT DISTINCT R1.name, R2.name
FROM 
(Reviewer NATURAL JOIN Rating) R1, (Reviewer NATURAL JOIN Rating) R2
WHERE R1.mID = R2.mID AND R1.name < R2.name
ORDER BY R1.name, R2.name

Q6

SELECT name, title, stars
FROM Movie, Reviewer, Rating
WHERE Movie.mID=Rating.mID AND Reviewer.rID = Rating.rID
AND Rating.stars=
(SELECT MIN(stars)
FROM Rating)

Q7

SELECT title, AVG(stars)
FROM Movie INNER JOIN Rating ON Movie.mID=Rating.mID
GROUP BY Movie.mID
ORDER BY AVG(stars) DESC, title

Q8

SELECT name
FROM Reviewer NATURAL JOIN Rating
GROUP BY name
HAVING COUNT(name)>=3

Q9

SELECT title, director
FROM Movie
WHERE director IN
(SELECT director
FROM Movie
GROUP BY director
HAVING COUNT(director)>=2)
ORDER BY director, title

Q10 (Correct but convoluted)

SELECT title, avgRating
FROM
(SELECT DISTINCT M1.title, M1.avgRating
FROM 
(SELECT title, AVG(stars) as avgRating
FROM Movie INNER JOIN Rating ON Movie.mID=Rating.mID
GROUP BY Movie.mID
ORDER BY AVG(stars) DESC, title) M1)
WHERE avgRating=
(SELECT MAX(avgRating)
FROM
(SELECT DISTINCT M1.title, M1.avgRating
FROM 
(SELECT title, AVG(stars) as avgRating
FROM Movie INNER JOIN Rating ON Movie.mID=Rating.mID
GROUP BY Movie.mID
ORDER BY AVG(stars) DESC, title) M1))

Q10 alternative
select movie.title, avg(rating.stars) from movie inner join rating on movie.mid=rating.mid 
group by
movie.title having avg(rating.stars) in
(select avg(rating.stars) from movie inner join rating
on movie.mid=rating.mid
group by movie.title
order by avg(rating.stars) desc
limit 1)
